"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
/**
 * This is very tricky bug fix for Angular 4-8 versions. The only thing we do here
 * is just override the `Location` subscription and wrap `scheduleNavigation`
 * into `ngZone.run(...)`, thus `routed` components will be created inside Angular's zone.
 * The main issue is `back/forward` buttons of browsers, because they invoke
 * `history.back|forward` which dispatch `popstate` event. Since `single-spa`
 * overrides `history.replaceState` Angular's zone cannot intercept this event.
 * Only the root zone is able to intercept all events.
 * See https://github.com/single-spa/single-spa-angular/issues/94 for more detail
 */
function patchRouter(opts) {
    // If the user didn't provide `{ Router: Router }` then it likely means that they don't
    // use routing in their application.
    if (opts.Router == null) {
        return;
    }
    var router = opts.bootstrappedModule.injector.get(opts.Router, null);
    // If by some reason the `Router` instance wasn't resolved...
    if (router === null) {
        return;
    }
    var scheduleNavigation = scheduleNavigationFactory(router);
    router.locationSubscription.unsubscribe();
    router.locationSubscription = router.location.subscribe(function (change) {
        var rawUrlTree = router.parseUrl(change['url']);
        var source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';
        var state = change.state && change.state.navigationId ? change.state : null;
        var extras = {
            replaceUrl: true
        };
        opts.bootstrappedNgZone.run(function () {
            return setTimeout(function () { return scheduleNavigation(rawUrlTree, source, state, extras); });
        });
    });
}
exports.patchRouter = patchRouter;
function scheduleNavigationFactory(router) {
    // Angular versions older than 6 have a different function signature
    // for router.scheduleNavigation().
    var olderThan6 = +core_1.VERSION.major < 6;
    return function (rawUrlTree, source, state, extras) {
        return olderThan6
            ? router.scheduleNavigation(rawUrlTree, source, extras)
            : router.scheduleNavigation(rawUrlTree, source, state, extras);
    };
}
//# sourceMappingURL=patch-router.js.map